{"version":3,"sources":["components/Contact.js","components/Filter.js","components/Name.js","components/Number.js","services/contacts.js","styles/styles.js","App.js","helperFuncs/findTheSame.js","index.js"],"names":["Contact","contact","deleteClick","name","number","nanoid","onClick","Filter","value","onChange","Name","Number","baseUrl","axios","get","then","response","data","newObject","post","id","delete","newObj","put","messageToUser","outline","fontColor","outlineWidth","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","searchingItem","setSearchingItem","errorMessage","setErrorMessage","showAll","setShowAll","useEffect","contactServices","allContacts","contactsToShow","filter","person","indexOf","style","styleFormats","event","console","log","target","onSubmit","preventDefault","item","find","arrItem","newOne","newContact","concat","window","confirm","changedPerson","updatedContact","map","catch","err","status","type","remainedContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50a4e349.chunk.js","sourcesContent":["import { nanoid } from 'nanoid'\n\n\nexport const Contact = ({contact, deleteClick}) => {\n    return (\n        <div>\n            <li key={nanoid()}>{contact.name} {contact.number}</li>\n            <button onClick={deleteClick}>Delete</button>\n\n        </div>\n    )\n}\n","export const Filter = ({value, onChange}) => <input value={value} onChange={onChange} />","export const Name = ({value, onChange}) => <input value={value} onChange={onChange} />","export const Number = ({value, onChange}) => <input value={value} onChange={onChange} />\n","import axios from \"axios\";\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data);\n}\n\nconst create = (newObject) => {\n    const request = axios.post(`${baseUrl}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst deleteContact = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObj) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObj)\n    return request.then(response => response.data)\n}\n\nexport default {getAll, create, deleteContact, update}","let messageToUser = {\n    outline: 'solid red',\n    fontColor: 'red',\n    outlineWidth: 'auto'\n}\n\n\n\n\nexport default {\n    messageToUser\n}","import React, {useEffect, useState} from 'react';\nimport { Contact } from './components/Contact';\nimport { Filter } from './components/Filter';\nimport { Name } from './components/Name';\nimport { Number } from './components/Number';\nimport contactServices from './services/contacts';\nimport { isExist } from './helperFuncs/findTheSame'\nimport styleFormats from './styles/styles';\nimport { nanoid } from 'nanoid';\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ searchingItem, setSearchingItem ] = useState('')\n  const [ errorMessage, setErrorMessage ] = useState('')\n  const [ showAll, setShowAll ] = useState(true)       \n    \n\n  \n  useEffect(() => {\n    contactServices\n      .getAll()\n      .then(allContacts => setPersons(allContacts))\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    if (isExist(persons, newName) === false) {\n      const newOne = {\n        id: nanoid(),\n        name: newName,\n        number: newNumber\n      }\n      contactServices\n        .create(newOne)\n        .then(newContact => {\n          setPersons(persons.concat(newContact))\n          setNewName('')\n          setNewNumber('')\n          setErrorMessage(`${newContact.name} is added.`)\n        })\n      } else {\n        if (window.confirm(`${newName} is already exist. Thus, we can replace ${newName}'s number. Do you want to replace his number?`)) {\n          const contact = persons.find(person => person.name === newName)\n          const changedPerson = {...contact, number: newNumber}\n\n          contactServices\n            .update(contact.id, changedPerson)\n            .then(updatedContact => {\n              setPersons(persons.map(person => person.id === contact.id ? updatedContact : person))\n              console.log(persons)\n              setNewNumber('')\n              setNewName('')\n              setErrorMessage(`${updatedContact.name}'s number is changed`)\n            })\n            .catch(err => {\n              if (err.response.status === 404) {\n                setErrorMessage(`${contact.name}'s data have already removed.`)\n              }\n            })\n        }\n         \n      }\n  }\n\n  const deletePerson = (id) => {\n    console.log(id)\n    contactServices\n      .deleteContact(id)\n      .then(remainedContacts => {\n        setPersons(persons.filter(person => person.id !== id))\n      })\n  }\n\n  const handleChangeName = (event) => {\n    console.log(event.target.value);\n    setNewName(event.target.value);\n  }\n  const handleChangeNumber = (event) => {\n    console.log(event.target.value);\n    setNewNumber(event.target.value);\n  }\n  const handleChangeSearch = (event) => {\n    console.log(event.target.value);\n    setSearchingItem(event.target.value)\n    setShowAll(false)\n    }\n\n  const contactsToShow = showAll\n      ? persons\n      : persons.filter(person => person.name.indexOf(searchingItem) !== -1);\n\n  return (\n    <div> \n      <h2>Phonebook</h2>\n      \n        {errorMessage === '' ? '' : \n          <div style={styleFormats.messageToUser}>\n            <h1 style={{fontColor: 'red'}}>{errorMessage}</h1>\n          </div>}\n      \n      \n      <div>\n        Search a name <Filter value={searchingItem} onChange={handleChangeSearch} />\n      </div>\n      <h2>Add a new contact</h2>\n      <form onSubmit={addPerson}>\n        <div>\n          name <Name value={newName} onChange={handleChangeName} />\n        </div>\n        <div>\n          number <Number value={newNumber} onChange={handleChangeNumber} />\n        </div> \n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>{showAll ? 'Numbers' : 'Result'}</h2>\n      <div>debug: {newName}</div>\n      <ul>\n        {contactsToShow.map(contact => <Contact key={nanoid()} contact={contact} deleteClick={() => deletePerson(contact.id)} />)}\n      </ul>\n    </div>\n  )\n}\nexport default App;","export const isExist = (arr, item) => {\n  let found = arr.find(arrItem => arrItem.name === item) ? true : false\n  return found\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}