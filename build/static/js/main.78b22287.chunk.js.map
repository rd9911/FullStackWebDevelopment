{"version":3,"sources":["reducers/notificationReducer.js","reducers/userLoginReducer userLoginReducer.js","services/login.js","services/blogs.js","components/Login.js","reducers/blogsReducer.js","components/BlogForm.js","components/BlogList.js","components/CollapsibleTable.js","components/UserList.js","components/Blog.js","components/User.js","services/users.js","reducers/usersInfoReducer.js","styles/navbar.js","components/Home.js","App.js","reducers/toggableReducer.js","index.js"],"names":["notificationCreator","message","dispatch","a","type","notification","notificationReducer","state","action","userLoginSetter","userToSet","user","userLoginReducer","login","axios","post","response","data","baseUrl","token","getAll","get","then","create","blog","config","headers","Authorization","setToken","tokenFromUser","likeBlog","blogId","put","deleteBlog","delete","commentOnBlog","comment","console","log","method","url","Login","useState","username","setUsername","password","setPassword","useDispatch","history","useHistory","useEffect","isMounted","loggedUserJSON","window","localStorage","getItem","JSON","parse","blogService","loginSubmit","event","preventDefault","userToLogin","loginService","loggedUser","setItem","stringify","push","setTimeout","onSubmit","TextField","required","label","variant","size","id","onChange","target","value","Button","color","blogCreator","blogToPost","blogLiker","blogRemover","blogsReducer","concat","blogs","map","likes","filter","comments","CreateForm","title","setTitle","setUrl","author","setAuthor","postBlog","details","error","className","BlogList","useSelector","sort","b","to","nanoid","useRowStyles","makeStyles","root","borderBottom","Row","props","row","open","setOpen","classes","Fragment","TableRow","TableCell","IconButton","onClick","component","scope","align","length","styel","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","Typography","gutterBottom","Table","TableHead","TableBody","CollapsibleTable","TableContainer","Paper","rows","UserList","users","usersInfo","Blog","userLoggedIn","userLogged","useParams","find","removeBlog","blogToRemove","confirm","like","blogToLike","onComment","blogToComment","commentToAdd","href","name","typ","User","getOne","usersInfoReducer","horizontalNav","Home","App","blogsToInitialize","userServices","Container","style","removeItem","clear","path","toggleReducer","reducer","combineReducers","visible","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.78b22287.chunk.js","sourcesContent":["export const notificationCreator = (message) => {\n  return async dispatch => {\n    dispatch({\n      type: 'bloglist/create-notification',\n      notification: message\n    })\n  }\n}\n\nconst notificationReducer = (state = '', action) => {\n  switch (action.type) {\n  case 'bloglist/create-notification':\n    return action.notification\n  default:\n    return state\n  }\n}\n\nexport default notificationReducer","\nexport const userLoginSetter = (userToSet) => {\n  return async dispatch => {\n    dispatch({\n      type: 'userLogin/set',\n      user: userToSet\n    })\n  }\n}\n\nconst userLoginReducer = (state='', action) => {\n  switch (action.type) {\n  case 'userLogin/set':\n    return action.user\n  default:\n    return state\n  }\n}\n\nexport default userLoginReducer","\nimport axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async (user) => {\n  const response = await axios.post(baseUrl, user)\n  return response.data\n}\n\nexport default { login }","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = (tokenFromUser) => {\n  token = `bearer ${tokenFromUser}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async (blog) => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  }\n  const response = await axios.post(baseUrl, blog, config)\n  return response.data\n}\n\nconst likeBlog = async (blogId) => {\n  if (token) {\n    const config = {\n      headers: {\n        Authorization: token\n      }\n    }\n    const response = await axios.put(`${baseUrl}/${blogId}`, config)\n    return response.data\n  }\n}\n\nconst deleteBlog = async (blogId) => {\n  if (token) {\n    const config = {\n      headers: {\n        Authorization: token\n      }\n    }\n    const response = await axios.delete(`${baseUrl}/${blogId}`, config)\n    return response.data\n  }\n}\n\nconst commentOnBlog = async (comment, blogId) => {\n  console.log('comment')\n  if (token) {\n    const config = { headers: { Authorization: token, 'Access-Control-Allow-Origin': '*' } }\n    const response = await axios({\n      method: 'put',\n      url: `${baseUrl}/${blogId}/comments`,\n      headers: config,\n      data: { comment: comment }\n    })\n    console.log(response)\n    return response.data\n  }\n}\n\nexport default { getAll, create, setToken, likeBlog, deleteBlog, commentOnBlog }","import React, { useState, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { notificationCreator } from '../reducers/notificationReducer'\nimport { userLoginSetter } from '../reducers/userLoginReducer userLoginReducer'\nimport loginService from '../services/login'\nimport blogService from '../services/blogs'\nimport { TextField, Button } from '@material-ui/core'\nimport { useHistory } from 'react-router-dom'\n\nconst Login = () => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  useEffect(() => {\n    let isMounted = true\n    const loggedUserJSON = window.localStorage.getItem('loggedUserJSON')\n    if (isMounted && loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      dispatch(userLoginSetter(user))\n      blogService.setToken(user.token)\n    }\n    return () => { isMounted = false }\n  }, [dispatch])\n\n  const loginSubmit = async (event) => {\n    event.preventDefault()\n    const userToLogin = {\n      username: username,\n      password: password\n    }\n    try {\n      const loggedUser = await loginService.login(userToLogin) // services.login(username, passwordtel )\n      dispatch(userLoginSetter(loggedUser))\n      window.localStorage.setItem('loggedUserJSON', JSON.stringify(loggedUser))\n      history.push('/')\n    } catch(err) {\n      console.log(err)\n      dispatch(notificationCreator('invalid username or password'))\n      setTimeout(() => { dispatch(notificationCreator('')) }, 3000)\n    }\n    setUsername('')  // GETTING WARNING. FIX IT!!!\n    setPassword('')\n  }\n\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <form onSubmit={loginSubmit}>\n        <TextField required label='Username' variant='filled' size='small' id='getUsername' onChange={({ target }) => setUsername(target.value)} /><br />\n        <TextField required label='Password' variant='filled' size='small' type='password' id='getPassword' onChange={({ target }) => setPassword(target.value)} />\n        <Button variant='contained' color='primary' type='submit' id='submitForm' >Submit</Button>\n      </form>\n    </div>\n  )\n}\n\n\nexport default Login","import blogService from '../services/blogs'\n\nexport const blogCreator = (blogToPost) => {\n  return async dispatch => {\n    await blogService.create(blogToPost)\n    dispatch({\n      type: 'blog/create',\n      blog: blogToPost\n    })\n  }\n}\n\nexport const blogsInitializer = (blogsToInitialize) => {\n  return async dispatch => {\n    dispatch({\n      type: 'blog/initialize',\n      blogs: blogsToInitialize\n    })\n  }\n}\n\nexport const blogLiker = (blogId) => {\n  return async dispatch => {\n    await blogService.likeBlog(blogId)\n    dispatch({\n      type: 'blog/like',\n      id: blogId\n    })\n  }\n}\n\nexport const blogRemover = (blogId) => {\n  return async dispatch => {\n    await blogService.deleteBlog(blogId)\n    dispatch({\n      type: 'blog/remove',\n      id: blogId\n    })\n  }\n}\n\nexport const blogCommentor = (commentToAdd, blogId) => {\n  return async dispatch => {\n    await blogService.commentOnBlog(commentToAdd, blogId)\n    dispatch({\n      type: 'blog/comment',\n      comment: commentToAdd,\n      id: blogId\n    })\n  }\n}\n\n\nconst blogsReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'blog/create':\n    return state.concat(action.blog)\n  case 'blog/initialize':\n    return action.blogs\n  case 'blog/like':\n    return state.map(blog => {\n      if (action.id === blog.id) { blog.likes += 1 }\n      return blog\n    })\n  case 'blog/remove':\n    return state.filter(blog => blog.id !== action.id)\n  case 'blog/comment':\n    return state.map(blog => {\n      if (action.id === blog.id) { blog.comments.concat(action.comment) }\n      return blog\n    })\n  default:\n    return state\n  }\n}\n\nexport default blogsReducer","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { notificationCreator } from '../reducers/notificationReducer'\nimport { blogCreator } from '../reducers/blogsReducer'\n\nconst CreateForm = () => {\n  const [title, setTitle] = useState('')\n  const [url, setUrl] = useState('')\n  const [author, setAuthor] = useState('')\n  const dispatch = useDispatch()\n\n  const clearForm = () => {\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n  }\n  const postBlog = async (event) => {\n    event.preventDefault()\n    try {\n      const blogToPost = {\n        title: title,\n        author: author,\n        url: url,\n        details: false\n      }\n      dispatch(blogCreator(blogToPost))\n      dispatch(notificationCreator(`a new blog ${blogToPost.title} by ${blogToPost.author}`))\n      setTimeout(() => { dispatch(notificationCreator('')) }, 3000)\n      clearForm()\n    } catch (error) {\n      dispatch(notificationCreator(error))\n      setTimeout(() => { dispatch(notificationCreator('')) }, 3000)\n    }\n  }\n\n  return (\n    <div>\n      Create new\n      <form onSubmit={postBlog}>\n        title <input className = 'title' value={title} onChange={({ target }) => { setTitle(target.value)} } /><br />\n        author <input className ='author' value={author} onChange={({ target }) => { setAuthor(target.value)} } /><br />\n        url <input className='url' value={url} onChange={({ target }) => { setUrl(target.value)} } /><br />\n        <input type='submit' value='create' />\n      </form>\n    </div>\n  )\n}\n\nexport default CreateForm","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { nanoid } from 'nanoid'\n\nconst BlogList = () => {\n  const blogs = useSelector(state => state.blogs)\n\n  return (\n    <div>\n      <div>\n        <h2>blogs</h2>\n        {console.log(blogs)}\n        {blogs.sort((a, b) =>  b.likes - a.likes).map(blog =>\n          <li className='blog' key={nanoid()}><Link to={`blog-list/${blog.id}`}>{blog.title}</Link></li>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default BlogList","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Box, Collapse, IconButton, Table, TableBody, TableCell, TableContainer,\n  TableHead, TableRow, Typography, Paper } from '@material-ui/core'\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown'\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp'\nimport { Link } from 'react-router-dom'\n\n\nconst useRowStyles = makeStyles({\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n})\n\nconst Row = (props) => {\n  const { row } = props\n  const [open, setOpen] = useState(false)\n  const classes = useRowStyles()\n\n  return (\n    <React.Fragment>\n      <TableRow className={classes.root}>\n        <TableCell>\n          <IconButton aria-label='expand row' size='small' onClick={() => setOpen(!open)}>\n            { open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component='th' scope='row'>\n          <Link to={`/user-list/${row.id}`}>{ row.username }</Link>\n        </TableCell>\n        <TableCell align='right'>{row.blogs.length}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell styel={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout='auto' unmountOnExit>\n            <Box margin={1}>\n              <Typography variant='h6' gutterBottom component='div'>Blogs</Typography>\n              <Table size='small' aria-label='purchases'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Title</TableCell>\n                    <TableCell align='right'>Author</TableCell>\n                    <TableCell align='right'>Url</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  { row.blogs.map( (blog) => (\n                    <TableRow key={blog.id}>\n                      <TableCell component='th' scope='row'>{blog.title}</TableCell>\n                      <TableCell align='right'>{blog.author}</TableCell>\n                      <TableCell align='right'>{blog.url}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  )\n}\n\nRow.propTypes = {\n  row: PropTypes.shape({\n    username: PropTypes.string.isRequired,\n    blogs: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        author: PropTypes.string.isRequired,\n        url: PropTypes.string.isRequired,\n      })\n    ).isRequired\n  }).isRequired\n}\nconst CollapsibleTable = (props) => {\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label='collapsible table'>\n        <TableHead>\n          <TableRow>\n            <TableCell />\n            <TableCell>Username</TableCell>\n            <TableCell align='right'>Blogs</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          { props.rows.map((row) => (\n            <Row key={row.id} row={row} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport default CollapsibleTable","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport CollapsibleTable from './CollapsibleTable'\n\nconst UserList = () => {\n  const users = useSelector(state => state.usersInfo)\n\n  return (\n    <div>\n      <h1>Users</h1>\n      <CollapsibleTable rows={users} />\n    </div>\n  )\n}\n\n\n\nexport default UserList","import React from 'react'\n// import PropTypes from 'prop-types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { blogRemover, blogLiker, blogCommentor } from '../reducers/blogsReducer'\nimport { notificationCreator } from '../reducers/notificationReducer'\nimport { useParams } from 'react-router-dom'\nimport { nanoid } from 'nanoid'\n\nconst Blog = ( props ) => {\n  const userLoggedIn = useSelector(state => state.userLogged)\n  const dispatch = useDispatch()\n  const id = useParams().id\n  let blog = props.blogs.find(blog => blog.id === id)\n  if (!blog) {\n    return null\n  }\n\n\n  const removeBlog = async (blogId, blogToRemove) => {\n    const confirm = window.confirm(`Remove blog ${blogToRemove.title} by ${blogToRemove.author}?`)\n    if (confirm) {\n      try {\n        dispatch(blogRemover(blogId))\n        dispatch(notificationCreator(`${blogToRemove.title} was deleted by ${userLoggedIn.username}`))\n        setTimeout(() => dispatch(notificationCreator('')), 3000)\n      } catch(error) {\n        dispatch(notificationCreator('missing or invalid token.'))  // made these things as one action creator with paramters for the message and time\n        setTimeout(() => dispatch(notificationCreator('')), 3000)\n      }\n    }\n  }\n\n  const like = async (blogId, blogToLike) => { // Chnage name of function\n    try {\n      dispatch(blogLiker(blogId))\n      dispatch(notificationCreator(`the blog ${blogToLike.title} is liked by ${userLoggedIn.username}`))\n      setTimeout(() => { dispatch(notificationCreator('')) }, 3000)\n    } catch(error) {\n      dispatch(notificationCreator(error))\n      setTimeout(() => dispatch(notificationCreator('')), 3000)\n    }\n  }\n\n  const onComment = (comment, blogToComment) => {\n    console.log(comment)\n    try {\n      dispatch(blogCommentor(comment, blogToComment.id))\n      dispatch(notificationCreator(`The use ${userLoggedIn.username} has commented on the blog ${blogToComment.title}: ${comment}`))\n      setTimeout(() => dispatch(notificationCreator(''), 3000))\n    } catch (error) {\n      dispatch(notificationCreator(error))\n      setTimeout(() => dispatch(notificationCreator('')), 3000)\n    }\n\n  }\n\n  return (\n    <div>\n      <div className='detail-view'>\n        {blog.title} by {blog.author} on <a href={blog.url}>{blog.url}</a> likes {blog.likes}\n        <button value='like' className='like' onClick={() => like(blog.id, blog)} >like</button>\n        <button value='delete' className='delete' onClick={() => removeBlog(blog.id, blog)} >delete</button>\n\n        <p>Comments</p>\n        <form onSubmit={(event) => { onComment(event.target.comment.value, blog) }}>\n          <input type='text' name='comment' />\n          <button typ='submit'>Post</button>\n        </form>\n        {blog.comments ? blog.comments.map(comment => <li key={nanoid()}>{comment}</li>) : ''}\n      </div>\n    </div>\n  )\n}\n\nexport default Blog","import React from 'react'\nimport { useParams } from 'react-router-dom'\n\nconst User = ( props ) => {\n  const id = useParams().id\n  const user = props.users.find(user => user.id === id)\n  if (!user) {\n    return null\n  }\n\n  return (\n    <div>\n      <p>{user.username}</p>\n      <div>\n        <h2>Added blogs</h2>\n        <ul>\n          {user.blogs.map(blog => <li key={blog.id}>{blog.title}</li>)}\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default User","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst getOne = async (id) => {\n  const response = await axios.get(`${baseUrl}/${id}`)\n  return response.data\n}\n\nexport default  { getAll, getOne }","export const usersInfoSetter = (usersInfo) => {\n  return async dispatch => {\n    dispatch({\n      type: 'user/info',\n      users: usersInfo\n    })\n  }\n}\n\nconst usersInfoReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'user/info':\n    return action.users\n  default:\n    return state\n  }\n}\n\nexport default usersInfoReducer","export const horizontalNav = { 'display': 'inline', 'padding': '5px' }","import React from 'react'\n\nconst Home = () => {\n\n  return (\n    <div>\n        Welcome\n    </div>\n  )\n}\n\nexport default Home","import React, { useEffect } from 'react'\nimport {\n  Switch,Route, Link\n} from 'react-router-dom'\nimport Container from '@material-ui/core/Container'\n\nimport Login from './components/Login'\nimport CreateForm from './components/BlogForm'\nimport BlogList from './components/BlogList'\nimport UserList from './components/UserList'\nimport Blog from './components/Blog'\nimport User from './components/User'\nimport blogService from './services/blogs'\nimport userServices from './services/users'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { blogsInitializer } from './reducers/blogsReducer'\nimport { usersInfoSetter } from './reducers/usersInfoReducer'\nimport { userLoginSetter } from './reducers/userLoginReducer userLoginReducer'\n\nimport { horizontalNav } from './styles/navbar'\nimport Home from './components/Home'\n\nconst App = () => {\n  const notification = useSelector(state => state.notification)\n  const userLoggedIn = useSelector(state => state.userLogged)\n  const blogs = useSelector(state => state.blogs)\n  const users = useSelector(state => state.usersInfo)\n  const history = useHistory()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    blogService.getAll().then(blogs => dispatch( blogsInitializer(blogs) ))\n    userServices.getAll().then(users => dispatch( usersInfoSetter(users) ))\n  }, [dispatch])\n\n  const logout = () => {\n    window.localStorage.removeItem('user')\n    window.localStorage.clear()\n    dispatch(userLoginSetter(''))\n    history.push('/login')\n  }\n\n  return (\n    <div>\n      { userLoggedIn ?\n        <Container>\n          <div>\n            <h3>{notification}</h3>\n            <div>\n              <nav>\n                <ul>\n                  <li style={horizontalNav}><Link to='/'>Home</Link></li>\n                  <li style={horizontalNav}><Link to='/blog-list'>Blogs</Link></li>\n                  <li style={horizontalNav}><Link to='/user-list'>Users</Link></li>\n                  <li style={horizontalNav}><Link to='/post-blog'>Post</Link></li>\n                  {userLoggedIn.username} logged in\n                  <li style={horizontalNav}><button onClick={logout}>Logout</button></li>\n                </ul>\n              </nav>\n            </div>\n\n            <Switch>\n              <Route path='/blog-list/:id'>\n                <Blog blogs={blogs}/>\n              </Route>\n              <Route path='/user-list/:id'>\n                <User users={users} />\n              </Route>\n              <Route path='/blog-list'>\n                <BlogList />\n              </Route>\n              <Route path='/user-list'>\n                <UserList />\n              </Route>\n              <Route path='/post-blog'>\n                <CreateForm />\n              </Route>\n              <Route path='/login'>\n                <Login />\n              </Route>\n              <Route path='/'>\n                <Home />\n              </Route>\n            </Switch>\n          </div>\n        </Container>\n        :\n        <div>\n          <Route to='/login'><Login /></Route>\n          { history.push('login') }\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default App","export const toggleTheState = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'state/toggle'\n    })\n  }\n}\n\nconst toggleReducer = (state = false, action) => {\n  switch (action.type) {\n  case  'state/toggle':\n    return !state\n  default:\n    return state\n  }\n}\n\nexport default toggleReducer\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport notificationReducer from './reducers/notificationReducer'\nimport blogsReducer from './reducers/blogsReducer'\nimport userLoginReducer from './reducers/userLoginReducer userLoginReducer'\nimport usersInfoReducer from './reducers/usersInfoReducer'\nimport toggleReducer from './reducers/toggableReducer'\n\n\nconst reducer = combineReducers({\n  blogs: blogsReducer,\n  userLogged: userLoginReducer,\n  notification: notificationReducer,\n  usersInfo: usersInfoReducer,\n  visible: toggleReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}