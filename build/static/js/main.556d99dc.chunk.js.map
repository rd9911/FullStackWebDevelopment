{"version":3,"sources":["components/Contact.js","components/Filter.js","components/Name.js","components/Number.js","services/contacts.js","styles/styles.js","App.js","helperFuncs/findTheSame.js","index.js"],"names":["Contact","contact","deleteClick","name","number","nanoid","onClick","Filter","value","onChange","Name","Number","baseUrl","contactServices","getAll","axios","get","then","response","data","catch","err","console","log","create","newObject","readyToPost","method","url","headers","json","deleteContact","id","delete","update","newObj","put","styleFormats","outline","fontColor","outlineWidth","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","searchingItem","setSearchingItem","errorMessage","setErrorMessage","showAll","setShowAll","useEffect","allContacts","contactsToShow","filter","person","indexOf","style","messageToUser","event","target","onSubmit","preventDefault","item","find","arrItem","newOne","newContact","concat","window","confirm","changedPerson","updatedContact","map","status","action","type","remainedContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.556d99dc.chunk.js","sourcesContent":["import { nanoid } from 'nanoid'\n\n\nexport const Contact = ({contact, deleteClick}) => {\n    return (\n        <div>\n            <li key={nanoid()}>{contact.name} {contact.number}</li>\n            <button onClick={deleteClick}>Delete</button>\n\n        </div>\n    )\n}\n","export const Filter = ({value, onChange}) => <input value={value} onChange={onChange} />","export const Name = ({value, onChange}) => <input value={value} onChange={onChange} />","export const Number = ({value, onChange}) => <input value={value} onChange={onChange} />\n","import axios from \"axios\";\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request\n    .then(response => response.data)\n    .catch(err => {\n        console.log(err)\n    });\n}\n\nconst create = (newObject) => {\n    const readyToPost = {\n        method: 'post',\n        url: `${baseUrl}`,\n        data: newObject,\n        headers: {'Content-Type': 'application/json'},\n        json: true\n      }\n    const request = axios(readyToPost)\n    return request.then(response => {\n        console.log(response.data)\n        return response.data\n    })\n    .catch(err => {\n        console.log(err)\n    })\n}\n\nconst deleteContact = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObj) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObj)\n    return request.then(response => response.data)\n}\n\nconst contactServices = {\n    getAll, \n    create, \n    deleteContact, \n    update\n}\n\nexport default contactServices;","export let messageToUser = {\n    outline: 'solid red',\n    fontColor: 'red',\n    outlineWidth: 'auto'\n}\n\nconst styleFormats = messageToUser\n\nexport default styleFormats;","import React, {useEffect, useState} from 'react';\nimport { Contact } from './components/Contact';\nimport { Filter } from './components/Filter';\nimport { Name } from './components/Name';\nimport { Number } from './components/Number';\nimport contactServices from './services/contacts';\nimport { isExist } from './helperFuncs/findTheSame'\nimport styleFormats from './styles/styles';\nimport { nanoid } from 'nanoid';\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ searchingItem, setSearchingItem ] = useState('')\n  const [ errorMessage, setErrorMessage ] = useState('')\n  const [ showAll, setShowAll ] = useState(true)       \n  \n  useEffect(() => {\n    contactServices\n      .getAll()\n      .then(allContacts => setPersons(allContacts))\n      .catch(err => { console.log(err) })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    if (isExist(persons, newName) === false) {\n      const newOne = {\n        name: newName,\n        number: newNumber\n      }\n      contactServices\n        .create(newOne)\n        .then(newContact => {\n          console.log(newContact)\n          setPersons(persons.concat(newContact))\n          setNewName('')\n          setNewNumber('')\n          setErrorMessage(`${newContact.name} is added.`)\n        })\n      } else {\n        if (window.confirm(`${newName} is already exist. Thus, we can replace ${newName}'s number. Do you want to replace his number?`)) {\n          const contact = persons.find(person => person.name === newName)\n          const changedPerson = {...contact, number: newNumber}\n\n          contactServices\n            .update(contact.id, changedPerson)\n            .then(updatedContact => {\n              setPersons(persons.map(person => person.id === contact.id ? updatedContact : person))\n              console.log(persons)\n              setNewNumber('')\n              setNewName('')\n              setErrorMessage(`${updatedContact.name}'s number is changed`)\n            })\n            .catch(err => {\n              if (err.response.status === 404) {\n                setErrorMessage(`${contact.name}'s data have already removed.`)\n              }\n            })\n        }\n         \n      }\n  }\n\n  const deletePerson = (id) => {\n    console.log(id)\n    contactServices\n      .deleteContact(id)\n      .then(remainedContacts => {\n        setPersons(persons.filter(person => person.id !== id))\n      })\n  }\n\n  const handleChangeName = (event) => {\n    setNewName(event.target.value);\n  }\n  const handleChangeNumber = (event) => {\n    setNewNumber(event.target.value);\n  }\n  const handleChangeSearch = (event) => {\n    setSearchingItem(event.target.value)\n    setShowAll(false)\n    }\n\n  const contactsToShow = showAll\n      ? persons\n      : persons.filter(person => person.name.indexOf(searchingItem) !== -1);\n\n  return (\n    <div> \n      <h2>Phonebook</h2>\n      \n        {errorMessage === '' ? '' : \n          <div style={styleFormats.messageToUser}>\n            <h1 style={{fontColor: 'red'}}>{errorMessage}</h1>\n          </div>}\n      <div>\n        Search a name <Filter value={searchingItem} onChange={handleChangeSearch} />\n      </div>\n      <h2>Add a new contact</h2>\n      <form onSubmit={addPerson} action=\"/api/persons\" method=\"post\">\n        <div>\n          name <Name value={newName} onChange={handleChangeName} />\n        </div>\n        <div>\n          number <Number value={newNumber} onChange={handleChangeNumber} />\n        </div> \n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>{showAll ? 'Numbers' : 'Result'}</h2>\n      <div>debug: {newName}</div>\n      <ul>\n        {console.log(contactsToShow)}\n        {contactsToShow && contactsToShow.map(contact => <Contact key={nanoid()} contact={contact} deleteClick={() => deletePerson(contact.id)} />)}\n      </ul>\n    </div>\n  )\n}\nexport default App;","export const isExist = (arr, item) => {\n  let found = arr.find(arrItem => arrItem.name === item) ? true : false\n  return found\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}