{"ast":null,"code":"var _jsxFileName = \"/home/rd9911/uniHelsinki/part1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: props.handleClick,\n  children: props.text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 3,\n  columnNumber: 27\n}, this);\n\n_c = Button;\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad,\n  all,\n  average,\n  positivePercentage\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Good \", good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Neutral \", neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Bad \", bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"All \", bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = Statistics;\n\nconst App = () => {\n  _s();\n\n  const [feedback, setFeedback] = useState({\n    good: 0,\n    neutral: 0,\n    bad: 0\n  });\n  const [allFeedbacks, setAll] = useState([]);\n\n  const incrementGoodFeedback = () => {\n    const newFeedback = { ...feedback,\n      good: feedback.good + 1\n    };\n    setFeedback(newFeedback);\n    setAll(allFeedbacks.concat(1));\n  };\n\n  const incrementNeutralFeedback = () => {\n    const newFeedback = { ...feedback,\n      neutral: feedback.neutral + 1\n    };\n    setFeedback(newFeedback);\n    setAll(allFeedbacks.concat(0));\n  };\n\n  const incrementBadFeeback = () => {\n    const newFeedback = { ...feedback,\n      bad: feedback.bad + 1\n    };\n    setFeedback(newFeedback);\n    setAll(allFeedbacks.concat(-1));\n  };\n\n  const average = arr => {\n    const reducer = (accumulator, currentVal) => accumulator + currentVal;\n\n    if (arr.length >= 1) {\n      return arr.reduce(reducer) / arr.length;\n    }\n\n    return 0;\n  };\n\n  const positivePercentage = (positiveFeedbacks, all) => {\n    return positiveFeedbacks / all + \"%\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Give feedbaallFeedbacks allFeedbacksck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: incrementGoodFeedback,\n      text: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: incrementNeutralFeedback,\n      text: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: incrementBadFeeback,\n      text: \"Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: feedback.good,\n      neutral: feedback.neutral,\n      bad: feedback.bad,\n      all: allFeedbacks.length,\n      avergae: average(allFeedbacks),\n      positivePercentage: positivePercentage(feedback.good, allFeedbacks.lemgth)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"4o2EGIxpYYZl0PcmGoMDtIEB38o=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/home/rd9911/uniHelsinki/part1/src/App.js"],"names":["React","useState","Button","props","handleClick","text","Statistics","good","neutral","bad","all","average","positivePercentage","App","feedback","setFeedback","allFeedbacks","setAll","incrementGoodFeedback","newFeedback","concat","incrementNeutralFeedback","incrementBadFeeback","arr","reducer","accumulator","currentVal","length","reduce","positiveFeedbacks","lemgth"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,iBAAW;AAAQ,EAAA,OAAO,EAAEA,KAAK,CAACC,WAAvB;AAAA,YAAqCD,KAAK,CAACE;AAA3C;AAAA;AAAA;AAAA;AAAA,QAA1B;;KAAMH,M;;AAEN,MAAMI,UAAU,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,OAAP;AAAgBC,EAAAA,GAAhB;AAAqBC,EAAAA,GAArB;AAA0BC,EAAAA,OAA1B;AAAmCC,EAAAA;AAAnC,CAAD,KAA4D;AAC7E,sBACA;AAAA,4BACE;AAAA,0BAASL,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BAAYC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,yBAAQC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,yBAAQA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AASD,CAVD;;MAAMH,U;;AAYN,MAAMO,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC;AACvCM,IAAAA,IAAI,EAAE,CADiC;AAC9BC,IAAAA,OAAO,EAAE,CADqB;AAClBC,IAAAA,GAAG,EAAE;AADa,GAAD,CAAxC;AAGA,QAAM,CAACO,YAAD,EAAeC,MAAf,IAAyBhB,QAAQ,CAAC,EAAD,CAAvC;;AAGA,QAAMiB,qBAAqB,GAAG,MAAM;AAC9B,UAAMC,WAAW,GAAG,EACpB,GAAGL,QADiB;AAEpBP,MAAAA,IAAI,EAAEO,QAAQ,CAACP,IAAT,GAAgB;AAFF,KAApB;AAIFQ,IAAAA,WAAW,CAACI,WAAD,CAAX;AACAF,IAAAA,MAAM,CAACD,YAAY,CAACI,MAAb,CAAoB,CAApB,CAAD,CAAN;AACD,GAPH;;AAQA,QAAMC,wBAAwB,GAAG,MAAM;AACrC,UAAMF,WAAW,GAAG,EAClB,GAAGL,QADe;AAElBN,MAAAA,OAAO,EAAEM,QAAQ,CAACN,OAAT,GAAmB;AAFV,KAApB;AAIAO,IAAAA,WAAW,CAACI,WAAD,CAAX;AACAF,IAAAA,MAAM,CAACD,YAAY,CAACI,MAAb,CAAoB,CAApB,CAAD,CAAN;AACD,GAPD;;AAQA,QAAME,mBAAmB,GAAG,MAAM;AAChC,UAAMH,WAAW,GAAG,EAClB,GAAGL,QADe;AAElBL,MAAAA,GAAG,EAAEK,QAAQ,CAACL,GAAT,GAAe;AAFF,KAApB;AAIAM,IAAAA,WAAW,CAACI,WAAD,CAAX;AACAF,IAAAA,MAAM,CAACD,YAAY,CAACI,MAAb,CAAoB,CAAC,CAArB,CAAD,CAAN;AACD,GAPD;;AASA,QAAMT,OAAO,GAAIY,GAAD,IAAS;AACvB,UAAMC,OAAO,GAAG,CAACC,WAAD,EAAcC,UAAd,KAA6BD,WAAW,GAAGC,UAA3D;;AACA,QAAIH,GAAG,CAACI,MAAJ,IAAc,CAAlB,EAAqB;AACpB,aAAOJ,GAAG,CAACK,MAAJ,CAAWJ,OAAX,IAAsBD,GAAG,CAACI,MAAjC;AACA;;AACD,WAAO,CAAP;AACD,GAND;;AAQA,QAAMf,kBAAkB,GAAG,CAACiB,iBAAD,EAAoBnB,GAApB,KAA4B;AACrD,WAAQmB,iBAAiB,GAAGnB,GAArB,GAA4B,GAAnC;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAEQ,qBAArB;AAA4C,MAAA,IAAI,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAEG,wBAArB;AAA+C,MAAA,IAAI,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAEC,mBAArB;AAA0C,MAAA,IAAI,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,UAAD;AACE,MAAA,IAAI,EAAER,QAAQ,CAACP,IADjB;AAEE,MAAA,OAAO,EAAEO,QAAQ,CAACN,OAFpB;AAGE,MAAA,GAAG,EAAEM,QAAQ,CAACL,GAHhB;AAIE,MAAA,GAAG,EAAEO,YAAY,CAACW,MAJpB;AAKE,MAAA,OAAO,EAAEhB,OAAO,CAACK,YAAD,CALlB;AAME,MAAA,kBAAkB,EAAEJ,kBAAkB,CAACE,QAAQ,CAACP,IAAV,EAAgBS,YAAY,CAACc,MAA7B;AANxC;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA/DD;;GAAMjB,G;;MAAAA,G;AAmEN,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst Button = (props) => <button onClick={props.handleClick}>{props.text}</button>\n\nconst Statistics = ({good, neutral, bad, all, average, positivePercentage}) => {\n  return (\n  <div>\n    <p>Good {good}</p>\n    <p>Neutral {neutral}</p>\n    <p>Bad {bad}</p>\n    <p>All {bad}</p>\n\n  </div>\n  )\n}\n\nconst App = () => {\n  const [feedback, setFeedback] = useState({\n    good: 0, neutral: 0, bad: 0\n  })\n  const [allFeedbacks, setAll] = useState([])\n\n\n  const incrementGoodFeedback = () => {\n        const newFeedback = {\n        ...feedback,\n        good: feedback.good + 1\n      }\n      setFeedback(newFeedback)\n      setAll(allFeedbacks.concat(1))\n    }\n  const incrementNeutralFeedback = () => {\n    const newFeedback = {\n      ...feedback,\n      neutral: feedback.neutral + 1\n    }\n    setFeedback(newFeedback)\n    setAll(allFeedbacks.concat(0))\n  }\n  const incrementBadFeeback = () => {\n    const newFeedback = {\n      ...feedback,\n      bad: feedback.bad + 1\n    }\n    setFeedback(newFeedback)\n    setAll(allFeedbacks.concat(-1))\n  }\n\n  const average = (arr) => {\n    const reducer = (accumulator, currentVal) => accumulator + currentVal\n    if (arr.length >= 1) {\n     return arr.reduce(reducer) / arr.length;\n    }\n    return 0;\n  }\n  \n  const positivePercentage = (positiveFeedbacks, all) => {\n    return (positiveFeedbacks / all) + \"%\";\n  }\n\n  return (\n    <div>\n      <h1>Give feedbaallFeedbacks\nallFeedbacksck</h1>\n      <Button handleClick={incrementGoodFeedback} text='Good' />\n      <Button handleClick={incrementNeutralFeedback} text='Neutral' />\n      <Button handleClick={incrementBadFeeback} text='Bad' />\n      <h1>Statistics</h1>\n      <Statistics \n        good={feedback.good} \n        neutral={feedback.neutral} \n        bad={feedback.bad} \n        all={allFeedbacks.length}\n        avergae={average(allFeedbacks)} \n        positivePercentage={positivePercentage(feedback.good, allFeedbacks.lemgth)}\n      />   \n    </div>\n  )\n\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}