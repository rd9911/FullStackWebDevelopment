{"version":3,"sources":["reducers/notificationReducer.js","reducers/userLoginReducer userLoginReducer.js","services/login.js","components/Login.js","services/blogs.js","reducers/blogsReducer.js","components/BlogForm.js","components/BlogList.js","components/CollapsibleTable.js","components/UserList.js","components/Blog.js","components/User.js","components/Home.js","components/Notification.js","components/NavigationBar.js","services/users.js","reducers/usersInfoReducer.js","App.js","reducers/toggableReducer.js","index.js"],"names":["notificationCreator","message","time","dispatch","a","setTimeout","type","notification","notificationReducer","state","action","userLoginSetter","userToSet","user","userLoginReducer","login","axios","post","response","data","Login","useState","username","setUsername","password","setPassword","useDispatch","history","useHistory","loginSubmit","event","preventDefault","userToLogin","loginService","loggedUser","window","localStorage","setItem","JSON","stringify","push","console","log","onSubmit","TextField","required","label","variant","size","id","onChange","target","value","Button","color","baseUrl","token","getAll","get","then","create","blog","config","headers","Authorization","setToken","tokenFromUser","likeBlog","blogId","put","deleteBlog","delete","commentOnBlog","comment","method","url","blogCreator","blogToPost","blogService","blogLiker","blogRemover","blogsReducer","concat","blogs","map","likes","filter","comments","CreateForm","title","setTitle","setUrl","author","setAuthor","userLoggedIn","useSelector","userLogged","loginChecker","postBlog","details","go","error","onClick","disabled","className","BlogList","sort","b","to","nanoid","useRowStyles","makeStyles","root","borderBottom","Row","props","row","open","setOpen","classes","Fragment","TableRow","TableCell","IconButton","component","scope","align","length","styel","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","Typography","gutterBottom","Table","TableHead","TableBody","CollapsibleTable","TableContainer","Paper","rows","UserList","users","usersInfo","Blog","useParams","find","removeBlog","blogToRemove","confirm","like","blogToLike","onComment","blogToComment","commentToAdd","href","name","typ","User","Home","Notification","notificationMessage","Alert","severity","linkLook","textDecoration","useStyles","theme","flexGrow","menuButton","marginRight","spacing","NavigationBar","AppBar","position","Toolbar","edge","Link","style","display","removeItem","clear","getOne","usersInfoReducer","App","useEffect","isMounted","loggedUserJSON","getItem","parse","blogsToInitialize","userServices","Container","path","toggleReducer","reducer","combineReducers","visible","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f8b073a9.chunk.js","sourcesContent":["export const notificationCreator = (message, time) => {\n  return async dispatch => {\n    setTimeout(() => {\n      dispatch({\n        type:'bloglist/create-notification',\n        notification: ''\n      })\n    }, time * 1000)\n    dispatch({\n      type: 'bloglist/create-notification',\n      notification: message\n    })\n  }\n}\n\nconst notificationReducer = (state = '', action) => {\n  switch (action.type) {\n  case 'bloglist/create-notification':\n    return action.notification\n  default:\n    return state\n  }\n}\n\nexport default notificationReducer","\nexport const userLoginSetter = (userToSet) => {\n  return async dispatch => {\n    dispatch({\n      type: 'userLogin/set',\n      user: userToSet\n    })\n  }\n}\n\nconst userLoginReducer = (state='', action) => {\n  switch (action.type) {\n  case 'userLogin/set':\n    return action.user\n  default:\n    return state\n  }\n}\n\nexport default userLoginReducer","\nimport axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async (user) => {\n  const response = await axios.post(baseUrl, user)\n  return response.data\n}\n\nexport default { login }","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { notificationCreator } from '../reducers/notificationReducer'\nimport { userLoginSetter } from '../reducers/userLoginReducer userLoginReducer'\nimport loginService from '../services/login'\nimport { TextField, Button } from '@material-ui/core'\nimport { useHistory } from 'react-router-dom'\n\nconst Login = () => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const loginSubmit = async (event) => {\n    event.preventDefault()\n    const userToLogin = {\n      username: username,\n      password: password\n    }\n    try {\n      const loggedUser = await loginService.login(userToLogin) // services.login(username, passwordtel )\n      dispatch(userLoginSetter(loggedUser))\n      window.localStorage.setItem('loggedUserJSON', JSON.stringify(loggedUser))\n      dispatch(notificationCreator(`${loggedUser.username} has logged in`, 3))\n      history.push('/')\n    } catch(err) {\n      console.log(err)\n      dispatch(notificationCreator('invalid username or password', 3))\n    }\n    setUsername('')  // GETTING WARNING. FIX IT!!!\n    setPassword('')\n  }\n\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <form onSubmit={loginSubmit}>\n        <TextField required label='Username' variant='filled' size='small' id='getUsername' onChange={({ target }) => setUsername(target.value)} /><br />\n        <TextField required label='Password' variant='filled' size='small' type='password' id='getPassword' onChange={({ target }) => setPassword(target.value)} />\n        <Button variant='contained' color='primary' type='submit' id='submitForm' >Submit</Button>\n      </form>\n    </div>\n  )\n}\n\n\nexport default Login","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = (tokenFromUser) => {\n  token = `bearer ${tokenFromUser}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async (blog) => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  }\n  const response = await axios.post(baseUrl, blog, config)\n  return response.data\n}\n\nconst likeBlog = async (blogId) => {\n  if (token) {\n    const config = {\n      headers: {\n        Authorization: token\n      }\n    }\n    const response = await axios.put(`${baseUrl}/${blogId}`, config)\n    return response.data\n  }\n}\n\nconst deleteBlog = async (blogId) => {\n  if (token) {\n    const config = {\n      headers: {\n        Authorization: token\n      }\n    }\n    const response = await axios.delete(`${baseUrl}/${blogId}`, config)\n    return response.data\n  }\n}\n\nconst commentOnBlog = async (comment, blogId) => {\n  console.log('comment')\n  if (token) {\n    const config = { headers: { Authorization: token, 'Access-Control-Allow-Origin': '*' } }\n    const response = await axios({\n      method: 'put',\n      url: `${baseUrl}/${blogId}/comments`,\n      headers: config,\n      data: { comment: comment }\n    })\n    console.log(response)\n    return response.data\n  }\n}\n\nexport default { getAll, create, setToken, likeBlog, deleteBlog, commentOnBlog }","import blogService from '../services/blogs'\n\nexport const blogCreator = (blogToPost) => {\n  return async dispatch => {\n    await blogService.create(blogToPost)\n    dispatch({\n      type: 'blog/create',\n      blog: blogToPost\n    })\n  }\n}\n\nexport const blogsInitializer = (blogsToInitialize) => {\n  return async dispatch => {\n    dispatch({\n      type: 'blog/initialize',\n      blogs: blogsToInitialize\n    })\n  }\n}\n\nexport const blogLiker = (blogId) => {\n  return async dispatch => {\n    await blogService.likeBlog(blogId)\n    dispatch({\n      type: 'blog/like',\n      id: blogId\n    })\n  }\n}\n\nexport const blogRemover = (blogId) => {\n  return async dispatch => {\n    await blogService.deleteBlog(blogId)\n    dispatch({\n      type: 'blog/remove',\n      id: blogId\n    })\n  }\n}\n\nexport const blogCommentor = (commentToAdd, blogId) => {\n  return async dispatch => {\n    await blogService.commentOnBlog(commentToAdd, blogId)\n    dispatch({\n      type: 'blog/comment',\n      comment: commentToAdd,\n      id: blogId\n    })\n  }\n}\n\n\nconst blogsReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'blog/create':\n    return state.concat(action.blog)\n  case 'blog/initialize':\n    return action.blogs\n  case 'blog/like':\n    return state.map(blog => {\n      if (action.id === blog.id) { blog.likes += 1 }\n      return blog\n    })\n  case 'blog/remove':\n    return state.filter(blog => blog.id !== action.id)\n  case 'blog/comment':\n    return state.map(blog => {\n      if (action.id === blog.id) { blog.comments.concat(action.comment) }\n      return blog\n    })\n  default:\n    return state\n  }\n}\n\nexport default blogsReducer","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { notificationCreator } from '../reducers/notificationReducer'\nimport { blogCreator } from '../reducers/blogsReducer'\nimport { useHistory } from 'react-router-dom'\nimport { TextField, Button } from '@material-ui/core'\n\nconst CreateForm = () => {\n  const [title, setTitle] = useState('')\n  const [url, setUrl] = useState('')\n  const [author, setAuthor] = useState('')\n  const userLoggedIn = useSelector(state => state.userLogged)\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const loginChecker = () => { // to disable publishing when a user is not logged in\n    return userLoggedIn ? false : true\n  }\n\n  const clearForm = () => {\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n  }\n  const postBlog = async (event) => {\n    event.preventDefault()\n    try {\n      const blogToPost = {\n        title: title,\n        author: author,\n        url: url,\n        details: false\n      }\n      dispatch(blogCreator(blogToPost))\n      dispatch(notificationCreator(`a new blog ${blogToPost.title} by ${blogToPost.author}`, 3))\n      clearForm()\n      history.go(0)\n      history.push('/blog-list')\n    } catch (error) {\n      dispatch(notificationCreator(error, 3))\n    }\n  }\n\n  return (\n    <div>\n      <form onSubmit={postBlog} onClick={() => !userLoggedIn ? dispatch(notificationCreator('You cannot publish anything unless you are logged in. Please, sign up or log in to be able to publish', 5)) : ''} >\n        <TextField required disabled={loginChecker()} variant='filled' label='Title'  className = 'title' value={title} onChange={({ target }) => { setTitle(target.value)} } /><br />\n        <TextField required disabled={loginChecker()} variant='filled' label='Author'  className ='author' value={author} onChange={({ target }) => { setAuthor(target.value)} } /><br />\n        <TextField required disabled={loginChecker()} variant='filled' label='Link'  className='url' value={url} onChange={({ target }) => { setUrl(target.value)} } /><br />\n        <Button disabled={loginChecker()} type='submit' variant='contained' color='primary' size='small'>Publish</Button>\n      </form>\n    </div>\n  )\n}\n\nexport default CreateForm","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { nanoid } from 'nanoid'\n\nconst BlogList = () => {\n  const blogs = useSelector(state => state.blogs)\n\n  return (\n    <div>\n      <div>\n        <h2>blogs</h2>\n        {console.log(blogs, 'is it')}\n        {blogs.sort((a, b) =>  b.likes - a.likes).map(blog =>\n          <li className='blog' key={nanoid()}><Link to={`blog-list/${blog.id}`}>{blog.title}</Link></li>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default BlogList","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Box, Collapse, IconButton, Table, TableBody, TableCell, TableContainer,\n  TableHead, TableRow, Typography, Paper } from '@material-ui/core'\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown'\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp'\nimport { Link } from 'react-router-dom'\n\n\nconst useRowStyles = makeStyles({\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n})\n\nconst Row = (props) => {\n  const { row } = props\n  const [open, setOpen] = useState(false)\n  const classes = useRowStyles()\n\n  return (\n    <React.Fragment>\n      <TableRow className={classes.root}>\n        <TableCell>\n          <IconButton aria-label='expand row' size='small' onClick={() => setOpen(!open)}>\n            { open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component='th' scope='row'>\n          <Link to={`/user-list/${row.id}`}>{ row.username }</Link>\n        </TableCell>\n        <TableCell align='right'>{row.blogs.length}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell styel={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout='auto' unmountOnExit>\n            <Box margin={1}>\n              <Typography variant='h6' gutterBottom component='div'>Blogs</Typography>\n              <Table size='small' aria-label='purchases'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Title</TableCell>\n                    <TableCell align='right'>Author</TableCell>\n                    <TableCell align='right'>Url</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  { row.blogs.map( (blog) => (\n                    <TableRow key={blog.id}>\n                      <TableCell component='th' scope='row'>{blog.title}</TableCell>\n                      <TableCell align='right'>{blog.author}</TableCell>\n                      <TableCell align='right'>{blog.url}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  )\n}\n\nRow.propTypes = {\n  row: PropTypes.shape({\n    username: PropTypes.string.isRequired,\n    blogs: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        author: PropTypes.string.isRequired,\n        url: PropTypes.string.isRequired,\n      })\n    ).isRequired\n  }).isRequired\n}\nconst CollapsibleTable = (props) => {\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label='collapsible table'>\n        <TableHead>\n          <TableRow>\n            <TableCell />\n            <TableCell>Username</TableCell>\n            <TableCell align='right'>Blogs</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          { props.rows.map((row) => (\n            <Row key={row.id} row={row} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport default CollapsibleTable","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport CollapsibleTable from './CollapsibleTable'\n\nconst UserList = () => {\n  const users = useSelector(state => state.usersInfo)\n\n  return (\n    <div>\n      <h1>Users</h1>\n      <CollapsibleTable rows={users} />\n    </div>\n  )\n}\n\n\n\nexport default UserList","import React from 'react'\n// import PropTypes from 'prop-types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { blogRemover, blogLiker, blogCommentor } from '../reducers/blogsReducer'\nimport { notificationCreator } from '../reducers/notificationReducer'\nimport { useParams } from 'react-router-dom'\nimport { nanoid } from 'nanoid'\n\nconst Blog = ( props ) => {\n  const userLoggedIn = useSelector(state => state.userLogged)\n  const dispatch = useDispatch()\n  const id = useParams().id\n  let blog = props.blogs.find(blog => blog.id === id)\n  if (!blog) {\n    return null\n  }\n\n\n  const removeBlog = async (blogId, blogToRemove) => {\n    const confirm = window.confirm(`Remove blog ${blogToRemove.title} by ${blogToRemove.author}?`)\n    if (confirm) {\n      try {\n        dispatch(blogRemover(blogId))\n        dispatch(notificationCreator(`${blogToRemove.title} was deleted by ${userLoggedIn.username}`, 3))\n      } catch(error) {\n        dispatch(notificationCreator('missing or invalid token.', 3))  // made these things as one action creator with paramters for the message and time\n      }\n    }\n  }\n\n  const like = async (blogId, blogToLike) => { // Chnage name of function\n    try {\n      dispatch(blogLiker(blogId))\n      dispatch(notificationCreator(`the blog ${blogToLike.title} is liked by ${userLoggedIn.username}`, 3))\n    } catch(error) {\n      dispatch(notificationCreator(error, 3))\n    }\n  }\n\n  const onComment = (comment, blogToComment) => {\n    console.log(blogToComment)\n    try {\n      dispatch(blogCommentor(comment, blogToComment.id))\n      dispatch(notificationCreator(`The use ${userLoggedIn.username} has commented on the blog ${blogToComment.title}: ${comment}`, 3))\n    } catch (error) {\n      dispatch(notificationCreator(error, 3))\n    }\n\n  }\n\n  return (\n    <div>\n      <div className='detail-view'>\n        {blog.title} by {blog.author} on <a href={blog.url}>{blog.url}</a> likes {blog.likes}\n        <button value='like' className='like' onClick={() => like(blog.id, blog)} >like</button>\n        <button value='delete' className='delete' onClick={() => removeBlog(blog.id, blog)} >delete</button>\n\n        <p>Comments</p>\n        <form onSubmit={(event) => { onComment(event.target.comment.value, blog) }}>\n          <input type='text' name='comment' />\n          <button typ='submit'>Post</button>\n        </form>\n        {blog.comments ? blog.comments.map(comment => <li key={nanoid()}>{comment}</li>) : ''}\n      </div>\n    </div>\n  )\n}\n\nexport default Blog","import React from 'react'\nimport { useParams } from 'react-router-dom'\n\nconst User = ( props ) => {\n  const id = useParams().id\n  const user = props.users.find(user => user.id === id)\n  if (!user) {\n    return null\n  }\n\n  return (\n    <div>\n      <p>{user.username}</p>\n      <div>\n        <h2>Added blogs</h2>\n        <ul>\n          {user.blogs.map(blog => <li key={blog.id}>{blog.title}</li>)}\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default User","import React from 'react'\n\nconst Home = () => {\n\n  return (\n    <div>\n        Welcome\n    </div>\n  )\n}\n\nexport default Home","import React from 'react'\nimport { Alert } from '@material-ui/lab'\nimport { useSelector } from 'react-redux'\n\nconst Notification = () => {\n  const notificationMessage = useSelector(state => state.notification)\n\n  return (\n    <div>\n      {notificationMessage ? <Alert severity='info'>{notificationMessage}</Alert> : '' }\n    </div>\n  )\n}\n\nexport default Notification","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport { Button } from '@material-ui/core'\nimport IconButton from '@material-ui/core/IconButton'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { userLoginSetter } from '../reducers/userLoginReducer userLoginReducer'\nimport { useHistory } from 'react-router-dom'\n\n\nconst linkLook = { textDecoration: 'none' }\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}))\n\n\nconst NavigationBar = () => {\n  const classes = useStyles()\n  const userLoggedIn = useSelector(state => state.userLogged)\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const logout = () => {\n    window.localStorage.removeItem('user')\n    window.localStorage.clear()\n    dispatch(userLoginSetter(''))\n    history.push('/login')\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position='static'>\n        <Toolbar variant='dense'>\n          <IconButton edge='start' color='inherit' aria-label='menu' ></IconButton>\n          <Button color='inherit' component={Link} style={linkLook} to='/'>\n            <Typography variant=\"h6\" className={classes.title}>Home</Typography>\n          </Button>\n          <Button color='inherit' component={Link} style={linkLook} to='/blog-list'>\n            <Typography variant=\"h6\" className={classes.title}>Blogs</Typography>\n          </Button>\n          <Button color='inherit' component={Link} style={linkLook} to='/user-list'>\n            <Typography variant=\"h6\" className={classes.title}>Users</Typography>\n          </Button>\n          <Button color='inherit' component={Link} style={linkLook} to='/post-blog'>\n            <Typography variant=\"h6\" className={classes.title}>Publish</Typography>\n          </Button>\n          { userLoggedIn ?\n            <div style={{ display: 'inline', align: 'left' }}>{`${userLoggedIn.username} logged in`}\n              <Button color='inherit' onClick={logout} >\n                <Typography variant=\"h6\" className={classes.title}>Logout</Typography>\n              </Button>\n            </div>\n            : <Button color='inherit' style={{ ...linkLook, align: 'left' }} component={Link} to='/login'>\n              <Typography variant=\"h6\" className={classes.title}>Login</Typography>\n            </Button> }\n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n}\n\nexport default NavigationBar","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst getOne = async (id) => {\n  const response = await axios.get(`${baseUrl}/${id}`)\n  return response.data\n}\n\nexport default  { getAll, getOne }","export const usersInfoSetter = (usersInfo) => {\n  return async dispatch => {\n    dispatch({\n      type: 'user/info',\n      users: usersInfo\n    })\n  }\n}\n\nconst usersInfoReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'user/info':\n    return action.users\n  default:\n    return state\n  }\n}\n\nexport default usersInfoReducer","import React, { useEffect } from 'react'\nimport {\n  Switch, Route\n} from 'react-router-dom'\nimport Container from '@material-ui/core/Container'\n\nimport Login from './components/Login'\nimport CreateForm from './components/BlogForm'\nimport BlogList from './components/BlogList'\nimport UserList from './components/UserList'\nimport Blog from './components/Blog'\nimport User from './components/User'\nimport Home from './components/Home'\nimport Notification from './components/Notification'\nimport NavigationBar from './components/NavigationBar'\nimport blogService from './services/blogs'\nimport userServices from './services/users'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { blogsInitializer } from './reducers/blogsReducer'\nimport { usersInfoSetter } from './reducers/usersInfoReducer'\nimport { userLoginSetter } from './reducers/userLoginReducer userLoginReducer'\n\n\nconst App = () => {\n  const blogs = useSelector(state => state.blogs)\n  const users = useSelector(state => state.usersInfo)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    let isMounted = true\n    const loggedUserJSON = window.localStorage.getItem('loggedUserJSON')\n    if (isMounted && loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      dispatch(userLoginSetter(user))\n      blogService.setToken(user.token)\n    }\n    return () => { isMounted = false }\n  }, [dispatch])\n\n  useEffect(() => {\n    blogService.getAll().then(blogs => dispatch( blogsInitializer(blogs) ))\n    userServices.getAll().then(users => dispatch( usersInfoSetter(users) ))\n  }, [dispatch])\n\n  return (\n    <div>\n      <Notification />\n      <Container>\n        <div>\n          <NavigationBar />\n          <Switch>\n            <Route path='/login'>\n              <Login />\n            </Route>\n            <Route path='/blog-list/:id'>\n              <Blog blogs={blogs}/>\n            </Route>\n            <Route path='/user-list/:id'>\n              <User users={users} />\n            </Route>\n            <Route path='/blog-list'>\n              <BlogList />\n            </Route>\n            <Route path='/user-list'>\n              <UserList />\n            </Route>\n            <Route path='/post-blog'>\n              <CreateForm />\n            </Route>\n            <Route path='/'>\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </Container>\n    </div>\n  )\n}\n\nexport default App","export const toggleTheState = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'state/toggle'\n    })\n  }\n}\n\nconst toggleReducer = (state = false, action) => {\n  switch (action.type) {\n  case  'state/toggle':\n    return !state\n  default:\n    return state\n  }\n}\n\nexport default toggleReducer\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport notificationReducer from './reducers/notificationReducer'\nimport blogsReducer from './reducers/blogsReducer'\nimport userLoginReducer from './reducers/userLoginReducer userLoginReducer'\nimport usersInfoReducer from './reducers/usersInfoReducer'\nimport toggleReducer from './reducers/toggableReducer'\n\n\nconst reducer = combineReducers({\n  blogs: blogsReducer,\n  userLogged: userLoginReducer,\n  notification: notificationReducer,\n  usersInfo: usersInfoReducer,\n  visible: toggleReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}