{"version":3,"sources":["components/Blog.js","components/Login.js","components/logout.js","components/Toggable.js","components/CreateForm.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","props","useState","fullDetails","setFullDetails","likeBlog","id","a","onLikeBlog","blog","title","url","author","onClick","likes","type","value","Login","React","forwardRef","ref","username","setUsername","password","setPassword","loginSubmit","event","preventDefault","userToLogin","onLogin","user","onChangeUser","window","localStorage","setItem","JSON","stringify","onChangeErrorMessage","onSubmit","name","onChange","target","Logout","removeItem","clear","Toggable","prosp","formVisible","setFormVisible","handleCreateBlogClick","e","useImperativeHandle","style","display","btnLabel","children","CreateForm","setTitle","setUrl","setAuthor","addBlog","blogToPost","onPostBlog","setTimeout","baseUrl","token","getAll","axios","get","then","response","data","create","config","headers","Authorization","post","setToken","tokenFromUser","like","put","login","App","blogs","setBlogs","errorMessage","setErrorMessage","setUser","blogFormRef","useRef","loginRef","useEffect","blogService","loggedUserJSON","getItem","parse","postBlog","current","loginUser","loginService","console","log","onChangeBlogs","map","nanoid","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5131b9ba.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst Blog = (props) => {\n  const [fullDetails, setFullDetails] = useState(false)\n\n  const toggleFullDetails = () => {\n    setFullDetails(!fullDetails)\n  }\n\n  const likeBlog = async (id) => {\n    await props.onLikeBlog(id)\n  }\n  \n  return (\n    <div>\n      {fullDetails ? \n          <div>\n            {props.blog.title} on {props.blog.url} by {props.blog.author} \n            <button onClick={() => likeBlog(props.blog.id)}>likes {props.blog.likes}</button>\n          </div> : \n          `${props.blog.title} by ${props.blog.author}` } \n          \n          <input type='button' value={fullDetails ? 'hide' : 'view'} onClick={toggleFullDetails} />\n    </div> \n  )\n}\n\nexport default Blog","import React, { useState } from 'react'\n\nconst Login = React.forwardRef((props, ref) => {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n\n    const loginSubmit = async (event) => {\n        event.preventDefault()\n        const userToLogin = {\n            username: username,\n            password: password\n        }\n\n        const user = await props.onLogin(userToLogin)\n        props.onChangeUser(user)\n        window.localStorage.setItem('loggedUserJSON', JSON.stringify(user))\n        props.onChangeErrorMessage()\n        setUsername('')\n        setPassword('')\n    }    \n    \n    return (\n        <div>\n            <h2>Login</h2>\n            <form onSubmit={loginSubmit}>\n              username <input type='text' name='username' id='getUsername' value={username} onChange={({target}) => setUsername(target.value)} />\n              <br /> password <input type='text' name='password' id='getPassword' value={password} onChange={({target}) => setPassword(target.value)} />\n              <input type='submit' name='submit' id='submitForm' value='Submit' />\n            </form>\n        </div>\n    )\n})\n\nexport default Login","import React from \"react\"\n\nconst Logout = (props) => {\n    const logout = () => {\n        window.localStorage.removeItem('user')\n        window.localStorage.clear()\n        props.onChangeUser('')\n    }\n    return (\n        <div>\n            <p>{props.user.username} logged in</p>\n            <input type='button' value='logout' onClick={logout} />\n        </div>\n    )\n}\n\nexport default Logout","import React, { useState, useImperativeHandle } from \"react\"\n\nconst Toggable = React.forwardRef((prosp, ref) => {\n    const [formVisible, setFormVisible] = useState(false)\n    \n    const handleCreateBlogClick = (e) => {\n        setFormVisible(!formVisible)\n      }\n\n      useImperativeHandle(ref, () => {\n        return {\n            handleCreateBlogClick\n      }\n    })\n    return (\n        <div>\n            <div style={{display: formVisible ? 'none' : ''}}>\n                <input type='button' value={prosp.btnLabel} onClick={handleCreateBlogClick} />\n            </div>\n            <div style={{display: formVisible ? '' : 'none'}}>\n                {prosp.children}\n                <input type='button' value='cancel'onClick={handleCreateBlogClick} />\n            </div>\n        </div>\n    )\n})\n\nexport default Toggable","import React, { useState } from 'react'\n\nconst CreateForm = (props) => {\n    const [title, setTitle] = useState('')\n    const [url, setUrl] = useState('')\n    const [author, setAuthor] = useState('')\n    \n    const addBlog = async (event) => {\n        event.preventDefault()\n        const blogToPost = {\n            title: title,\n            author: author,\n            url: url\n        }\n        \n        await props.onPostBlog(blogToPost)\n        setTitle('')\n        setAuthor('')\n        setUrl('')\n        props.onChangeErrorMessage(`a new blog ${blogToPost.title} by ${blogToPost.author}`)\n        setTimeout(() => { props.onChangeErrorMessage('') }, 3000)\n    }\n    return (\n        <div>\n            Create new\n            <form onSubmit={addBlog}>\n                title <input value={title} onChange={({target}) => { setTitle(target.value)} } /><br />\n                author <input value={author} onChange={({target}) => { setAuthor(target.value)} } /><br />\n                url <input value={url} onChange={({target}) => { setUrl(target.value)} } /><br />\n                <input type='submit' value='create' />\n            </form>\n        </div>\n        \n    )\n}\n\nexport default CreateForm","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null;\n\nconst setToken = (tokenFromUser) => {\n  token = `bearer ${tokenFromUser}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async (blog) => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  }\n  const response = await axios.post(baseUrl, blog, config)\n  return response.data\n}\n\nconst like = async(id) => {\n  const response = await axios.put(`baseUrl/${id}`)\n  return response.data\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getAll, create, setToken, like }\n","/* eslint-disable import/no-anonymous-default-export */\nimport axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async (user) => {\n    const response = await axios.post(baseUrl, user);\n    return response.data;\n  }\n  \nexport default { login }","import React, { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport Login from './components/Login'\nimport Logout from './components/logout'\nimport Toggable from './components/Toggable'\nimport CreateForm from './components/CreateForm'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport {nanoid} from 'nanoid'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [errorMessage, setErrorMessage] = useState('')\n  const [user, setUser] = useState('')\n\n  const blogFormRef = useRef()\n  const loginRef = useRef()\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )}, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedUserJSON')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n  \n  const postBlog = async (blogToPost) => {\n    try {\n      const response = await blogService.create(blogToPost)\n      blogFormRef.current.handleCreateBlogClick()\n      return response;\n    } catch (error) {\n      setErrorMessage(error)\n      setTimeout(() => { setErrorMessage('') }, 3000)\n    }\n  }\n\n  const loginUser = async(userToLogin) => {\n    try {\n      const response = await loginService.login(userToLogin)\n      return response;\n    } catch (error) {\n      setErrorMessage('invalid username or password')\n      console.log(error)\n      setTimeout(() => { setErrorMessage('') }, 3000)\n    }\n  }\n\n  const likeBlog = async(id) => {\n    try {\n      const response = await blogService.like(id)\n      return response\n    } catch (error) {\n      setErrorMessage('invalid request: no blog found to like')\n      console.log(error)\n      setTimeout(() => { setErrorMessage('') }, 3000)\n    }\n  }\n  \n\n  return (\n    <div>\n      <div>\n        <h3>{errorMessage}</h3>\n        {user\n          ? <div>\n            <Logout user={user} onChangeUser={setUser} />\n            <Toggable btnLabel='create new blog' ref={blogFormRef}>\n              <CreateForm onChangeErrorMessage={setErrorMessage} onChangeBlogs={setBlogs} onPostBlog={postBlog} />\n            </Toggable>\n            <h2>blogs</h2>\n            {blogs.map(blog => <Blog blog={blog} onLikeBlog={likeBlog} key={nanoid()} /> )}\n              \n          </div>\n          \n          : <Toggable btnLabel='login' ref={loginRef}>\n            <Login onLogin={loginUser} onChangeErrorMessage={setErrorMessage} onChangeUser={setUser} />\n          </Toggable>\n      }\n      </div>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}