{"version":3,"sources":["reducers/notificationReducer.js","reducers/userLoginReducer userLoginReducer.js","services/login.js","services/blogs.js","components/Login.js","components/Toggable.js","reducers/blogsReducer.js","components/BlogForm.js","services/users.js","reducers/usersInfoReducer.js","components/BlogList.js","components/User.js","components/UserList.js","components/Logout.js","components/Blog.js","App.js","reducers/toggableReducer.js","index.js"],"names":["notificationCreator","message","dispatch","a","type","notification","notificationReducer","state","action","userLoginSetter","userToSet","user","userLoginReducer","login","axios","post","response","data","baseUrl","token","getAll","get","then","create","blog","config","headers","Authorization","setToken","tokenFromUser","likeBlog","blogId","put","deleteBlog","delete","Login","onLogin","useState","username","setUsername","password","setPassword","useDispatch","useEffect","isMounted","loggedUserJSON","window","localStorage","getItem","JSON","parse","blogService","loginSubmit","event","preventDefault","userToLogin","loginService","loggedUser","console","log","setItem","stringify","setTimeout","onSubmit","className","name","id","value","onChange","target","Toggable","React","forwardRef","props","ref","formVisible","setFormVisible","handleCreateBlogClick","useImperativeHandle","style","display","btnLabel","onClick","children","displayName","blogCreator","blogToPost","blogLiker","blogRemover","blogsReducer","concat","blogs","map","likes","filter","CreateForm","onBlogPost","title","setTitle","url","setUrl","author","setAuthor","postBlog","details","error","getOne","usersInfoReducer","users","BlogList","useSelector","sort","b","to","content","User","length","UserList","usersInfo","Logout","removeItem","clear","Blog","fullDetails","setFullDetails","userLoggedIn","userLogged","useParams","find","handleChangeFullDetails","removeBlog","blogToRemove","confirm","like","blogToLike","Home","App","blogsToInitialize","userServices","loginRef","useRef","blogRef","path","current","toggleReducer","reducer","combineReducers","visible","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54f1add0.chunk.js","sourcesContent":["export const notificationCreator = (message) => {\n  return async dispatch => {\n    dispatch({\n      type: 'bloglist/create-notification',\n      notification: message\n    })\n  }\n}\n\nconst notificationReducer = (state = '', action) => {\n  switch (action.type) {\n  case 'bloglist/create-notification':\n    return action.notification\n  default:\n    return state\n  }\n}\n\nexport default notificationReducer","\nexport const userLoginSetter = (userToSet) => {\n  return async dispatch => {\n    dispatch({\n      type: 'userLogin/set',\n      user: userToSet\n    })\n  }\n}\n\nconst userLoginReducer = (state='', action) => {\n  switch (action.type) {\n  case 'userLogin/set':\n    return action.user\n  default:\n    return state\n  }\n}\n\nexport default userLoginReducer","\nimport axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async (user) => {\n  const response = await axios.post(baseUrl, user)\n  return response.data\n}\n\nexport default { login }","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = (tokenFromUser) => {\n  token = `bearer ${tokenFromUser}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async (blog) => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  }\n  const response = await axios.post(baseUrl, blog, config)\n  return response.data\n}\n\nconst likeBlog = async (blogId) => {\n  if (token) {\n    const config = {\n      headers: {\n        Authorization: token\n      }\n    }\n    const response = await axios.put(`${baseUrl}/${blogId}`, config)\n    return response.data\n  }\n}\n\nconst deleteBlog = async (blogId) => {\n  if (token) {\n    const config = {\n      headers: {\n        Authorization: token\n      }\n    }\n    const response = await axios.delete(`${baseUrl}/${blogId}`, config)\n    return response.data\n  }\n}\n\nexport default { getAll, create, setToken, likeBlog, deleteBlog }","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { useDispatch } from 'react-redux'\nimport { notificationCreator } from '../reducers/notificationReducer'\nimport { userLoginSetter } from '../reducers/userLoginReducer userLoginReducer'\nimport loginService from '../services/login'\nimport blogService from '../services/blogs'\n\n\nconst Login = ({ onLogin }) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    let isMounted = true\n    const loggedUserJSON = window.localStorage.getItem('loggedUserJSON')\n    if (isMounted && loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      dispatch(userLoginSetter(user))\n      blogService.setToken(user.token)\n    }\n    return () => { isMounted = false }\n  }, [])\n\n  const loginSubmit = async (event) => {\n    event.preventDefault()\n    const userToLogin = {\n      username: username,\n      password: password\n    }\n    try {\n      onLogin(userToLogin)\n      const loggedUser = await loginService.login(userToLogin) // services.login(username, passwordtel )\n      console.log(loggedUser)\n      dispatch(userLoginSetter(loggedUser))\n      window.localStorage.setItem('loggedUserJSON', JSON.stringify(loggedUser))\n      return loggedUser\n    } catch(err) {\n      console.log(err)\n      dispatch(notificationCreator('invalid username or password'))\n      setTimeout(() => { dispatch(notificationCreator('')) }, 3000)\n    }\n    setUsername('')  // GETTING WARNING. FIX IT!!!\n    setPassword('')\n  }\n\n\n  return (\n    <div>\n      <form onSubmit={loginSubmit}>\n        username <input type='text' className='username' name='username' id='getUsername' value={username} onChange={({ target }) => setUsername(target.value)} /><br />\n        password <input type='text' className='password' name='password' id='getPassword' value={password} onChange={({ target }) => setPassword(target.value)} />\n        <input type='submit' name='submit' id='submitForm' value='Submit' />\n      </form>\n    </div>\n  )\n}\n\nLogin.propTypes = {\n  onLogin: PropTypes.func.isRequired\n}\n\nexport default Login","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\n// change the Toggle so that it uses redux state. take off all the refs froom the app. Refactor the app so that everything was in its own componennt\n\n\nconst Toggable = React.forwardRef((props, ref) => {\n  const [formVisible, setFormVisible] = useState(false)\n\n  const handleCreateBlogClick = () => {\n    setFormVisible(!formVisible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      handleCreateBlogClick\n    }\n  })\n\n  return (\n    <div>\n      <div style={{ display: formVisible ? 'None' : '' }}>\n        <input className={props.btnLabel} type='button' value={props.btnLabel} onClick={handleCreateBlogClick} />\n      </div>\n      <div style={{ display: formVisible ? '' : 'None' }} className='show-child'>\n        {props.children}\n        <input type='button' value='cancel' onClick={handleCreateBlogClick} />\n      </div>\n    </div>\n  )\n})\n\nToggable.displayName = 'Toggable'\nToggable.propTypes = { btnLabel: PropTypes.string.isRequired }\n\nexport default Toggable","import blogService from '../services/blogs'\n\nexport const blogCreator = (blogToPost) => {\n  return async dispatch => {\n    await blogService.create(blogToPost)\n    dispatch({\n      type: 'blog/create',\n      blog: blogToPost\n    })\n  }\n}\n\nexport const blogsInitializer = (blogsToInitialize) => {\n  return async dispatch => {\n    dispatch({\n      type: 'blog/initialize',\n      blogs: blogsToInitialize\n    })\n  }\n}\n\nexport const blogLiker = (blogId) => {\n  return async dispatch => {\n    await blogService.likeBlog(blogId)\n    dispatch({\n      type: 'blog/like',\n      id: blogId\n    })\n  }\n}\n\nexport const blogRemover = (blogId) => {\n  return async dispatch => {\n    await blogService.deleteBlog(blogId)\n    dispatch({\n      type: 'blog/remove',\n      id: blogId\n    })\n  }\n}\n\n// export const blogDetails = (blogId) => {\n//   return async dispatch => {\n//     dispatch({\n//       type: ''\n//     })\n//   }\n// }\n\nconst blogsReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'blog/create':\n    return state.concat(action.blog)\n  case 'blog/initialize':\n    return action.blogs\n  case 'blog/like':\n    return state.map(blog => {\n      if (action.id === blog.id) {\n        blog.likes += 1\n      }\n      return blog\n    })\n  case 'blog/remove':\n    return state.filter(blog => blog.id !== action.id)\n  default:\n    return state\n  }\n}\n\nexport default blogsReducer","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { notificationCreator } from '../reducers/notificationReducer'\nimport { blogCreator } from '../reducers/blogsReducer'\n\nconst CreateForm = ({ onBlogPost }) => {\n  const [title, setTitle] = useState('')\n  const [url, setUrl] = useState('')\n  const [author, setAuthor] = useState('')\n  const dispatch = useDispatch()\n\n  const clearForm = () => {\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n  }\n  const postBlog = async (event) => {\n    event.preventDefault()\n    try {\n      onBlogPost()\n      const blogToPost = {\n        title: title,\n        author: author,\n        url: url,\n        details: false\n      }\n      dispatch(blogCreator(blogToPost))\n      dispatch(notificationCreator(`a new blog ${blogToPost.title} by ${blogToPost.author}`))\n      setTimeout(() => { dispatch(notificationCreator('')) }, 3000)\n      clearForm()\n    } catch (error) {\n      dispatch(notificationCreator(error))\n      setTimeout(() => { dispatch(notificationCreator('')) }, 3000)\n    }\n  }\n\n  return (\n    <div>\n      Create new\n      <form onSubmit={postBlog}>\n        title <input className = 'title' value={title} onChange={({ target }) => { setTitle(target.value)} } /><br />\n        author <input className ='author' value={author} onChange={({ target }) => { setAuthor(target.value)} } /><br />\n        url <input className='url' value={url} onChange={({ target }) => { setUrl(target.value)} } /><br />\n        <input type='submit' value='create' />\n      </form>\n    </div>\n  )\n}\n\nCreateForm.propTypes = {\n  onBlogPost: PropTypes.func.isRequired\n}\n\nexport default CreateForm","import axios from 'axios'\nconst baseUrl = 'api/users'\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  console.log(response.data)\n  return response.data\n}\n\nconst getOne = async (id) => {\n  const response = await axios.get(`${baseUrl}/${id}`)\n  return response.data\n}\n\nexport default  { getAll, getOne }\n","export const usersInfoSetter = (usersInfo) => {\n  return async dispatch => {\n    dispatch({\n      type: 'user/info',\n      users: usersInfo\n    })\n  }\n}\n\nconst usersInfoReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'user/info':\n    return action.users\n  default:\n    return state\n  }\n}\n\nexport default usersInfoReducer","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nconst BlogList = () => {\n  const blogs = useSelector(state => state.blogs)\n\n  return (\n    <div>\n      <div>\n        <h2>blogs</h2>\n        {blogs.sort((a, b) =>  b.likes - a.likes).map(blog =>\n          <Link to={`blog-list/${blog.id}`} key={blog.id}>{blog.content}</Link>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default BlogList","import React from 'react'\n\nconst User = ({ user }) => {\n  return (\n    <div>\n      <table>\n        <tbody>\n          <tr>\n            <th></th>\n            <th>Blogs</th>\n          </tr>\n          <tr>\n            <td>{user.username}</td>\n            <td>{user.blogs.length}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default User","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport User from './User'\n\nconst UserList = () => {\n  const users = useSelector(state => state.usersInfo)\n\n  return (\n    <div>\n      <h1>Users</h1>\n      <div>\n        {users.map(user => <User key={user.id} user={user} />)}\n      </div>\n    </div>\n  )\n}\n\nexport default UserList","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { userLoginSetter } from '../reducers/userLoginReducer userLoginReducer'\n\nconst Logout = () => {\n  const dispatch = useDispatch()\n\n  const logout = () => {\n    window.localStorage.removeItem('user')\n    window.localStorage.clear()\n    dispatch(userLoginSetter(''))\n  }\n  return (\n    <div>\n      <input type='button' className='logout' value='logout' onClick={logout} />\n    </div>\n  )\n}\n\nexport default Logout","import React, { useState } from 'react'\n// import PropTypes from 'prop-types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { blogRemover, blogLiker } from '../reducers/blogsReducer'\nimport { notificationCreator } from '../reducers/notificationReducer'\nimport { Link, useParams } from 'react-router-dom'\n\nconst Blog = ( props ) => {\n  const [fullDetails, setFullDetails] = useState(false)\n  const userLoggedIn = useSelector(state => state.userLogged)\n  const dispatch = useDispatch()\n  const id = useParams().id\n  console.log(props.blogs)\n  let blog\n  if (id) {\n    console.log(id)\n    blog = props.blogs.find(blog => blog.id === id)\n    console.log(blog)\n  } else {blog\n    blog = props.blog\n  }\n\n\n  const handleChangeFullDetails = () => {\n    setFullDetails(!fullDetails)\n  }\n\n  const removeBlog = async (blogId, blogToRemove) => {\n    const confirm = window.confirm(`Remove blog ${blogToRemove.title} by ${blogToRemove.author}?`)\n    if (confirm) {\n      try {\n        dispatch(blogRemover(blogId))\n        dispatch(notificationCreator(`${blogToRemove.title} was deleted by ${userLoggedIn.username}`))\n        setTimeout(() => dispatch(notificationCreator('')), 3000)\n      } catch(error) {\n        dispatch(notificationCreator('missing or invalid token.'))\n        setTimeout(() => dispatch(notificationCreator('')), 3000)\n      }\n    }\n  }\n\n  const like = async (blogId, blogToLike) => { // Chnage name of function\n    try {\n      dispatch(blogLiker(blogId))\n      dispatch(notificationCreator(`the blog ${blogToLike.title} is liked by ${userLoggedIn.username}`))\n      setTimeout(() => { dispatch(notificationCreator('')) }, 3000)\n    } catch(error) {\n      dispatch(notificationCreator(error))\n      setTimeout(() => dispatch(notificationCreator('')), 3000)\n    }\n  }\n\n  return (\n    <div>\n      {fullDetails\n        ?\n        <div className='detail-view'>\n          <Link to={`blog-list/${blog.id}`}>{blog.title} by {blog.author} on {blog.url} likes {blog.likes}</Link>\n          <button value='like' className='like' onClick={() => like(blog.id, blog)} >like</button>\n          <button value='delete' className='delete' onClick={() => removeBlog(blog.id, blog)} >delete</button>\n          <button value='hide' className='hide' onClick={handleChangeFullDetails} >hide</button>\n        </div>\n        :\n        <div className='short-view'>\n          <Link to={`blog-list/${blog.id}`}>{blog.title} by {blog.author}</Link>\n          <button value='view' className='view' onClick={handleChangeFullDetails} >view</button>\n        </div>}\n    </div>\n  )\n}\n\nexport default Blog","import React, { useRef, useEffect } from 'react'\nimport {\n  BrowserRouter as Router, Switch,Route,Link\n} from 'react-router-dom'\nimport Login from './components/Login'\nimport Toggable from './components/Toggable'\nimport CreateForm from './components/BlogForm'\nimport blogService from './services/blogs'\nimport userServices from './services/users'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { blogsInitializer } from './reducers/blogsReducer'\nimport { usersInfoSetter } from './reducers/usersInfoReducer'\nimport BlogList from './components/BlogList'\nimport UserList from './components/UserList'\nimport Logout from './components/Logout'\nimport Blog from './components/Blog'\n\nfunction Home() {\n  return (<div>Welcome</div>)\n}\n\nconst App = () => {\n  const notification = useSelector(state => state.notification)\n  const userLoggedIn = useSelector(state => state.userLogged)\n  const blogs = useSelector(state => state.blogs)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    blogService.getAll().then(blogs => dispatch( blogsInitializer(blogs) ))\n    userServices.getAll().then(users => dispatch( usersInfoSetter(users) ))\n  }, [])\n\n  const loginRef = useRef()\n  const blogRef = useRef()\n\n  const login = () => {\n    loginRef.current.handleCreateBlogClick()\n  }\n\n  const postBlog = () => {\n    blogRef.current.handleCreateBlogClick()\n  }\n\n  return (\n    <div>\n      <h3>{notification}</h3>\n      {userLoggedIn\n        ? <Router>\n          <div>\n            <p>{userLoggedIn.username} logged in</p>\n            <nav>\n              <ul>\n                <li><Link to='/'>Home</Link></li>\n                <li><Link to='/blog-list'>Blogs</Link></li>\n                <li><Link to='/user-list'>Users</Link></li>\n                <li><Link to='/post-blog'>Post</Link></li>\n                <li><Link to='/logout'>Logout</Link></li>\n              </ul>\n            </nav>\n          </div>\n\n          <Switch>\n            <Route path='/blog-list/:id'>\n              <Blog blogs={blogs}/>\n            </Route>\n            <Route path='/blog-list'>\n              <BlogList />\n            </Route>\n            <Route path='/user-list'>\n              <UserList />\n            </Route>\n            <Route path='/post-blog'>\n              <Toggable btnLabel='create-blog' ref={blogRef} >\n                <CreateForm onBlogPost={postBlog} />\n              </Toggable>\n            </Route>\n            <Route path='/logout'>\n              <Logout />\n            </Route>\n            <Route path='/'>\n              <Home />\n            </Route>\n          </Switch>\n        </Router>\n        : <div>\n          <h2>Login</h2>\n          <Toggable btnLabel='log-in' ref={loginRef} >\n            <Login onLogin={login} />\n          </Toggable>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default App","export const toggleTheState = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'state/toggle'\n    })\n  }\n}\n\nconst toggleReducer = (state = false, action) => {\n  switch (action.type) {\n  case  'state/toggle':\n    return !state\n  default:\n    return state\n  }\n}\n\nexport default toggleReducer\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport { Provider } from 'react-redux'\n\nimport notificationReducer from './reducers/notificationReducer'\nimport blogsReducer from './reducers/blogsReducer'\nimport userLoginReducer from './reducers/userLoginReducer userLoginReducer'\nimport usersInfoReducer from './reducers/usersInfoReducer'\nimport toggleReducer from './reducers/toggableReducer'\n\n\nconst reducer = combineReducers({\n  blogs: blogsReducer,\n  userLogged: userLoginReducer,\n  notification: notificationReducer,\n  usersInfo: usersInfoReducer,\n  visible: toggleReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}